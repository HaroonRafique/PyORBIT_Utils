call, file='PSB/psb.ele';
call, file='PSB/psb.seq';
call, file='PSB/psb.dbx';
call, file='PSB/psb_160MeV.str';
call, file='PSB/powering.seq';
call, file='PSB/defseries.seq';
call, file='PSB/psb_orbit.str';

!160 MeV

beam, particle=PROTON, pc=0.5707;  ! change depending on c-time of orbit measurement; pc=momentum
use, sequence=psb3; ! Ring 3
set,  format="20.10f";

value, beam->pc;

use, sequence=psb3;

create, table=model, column=q1, q2, betax_2L1.V_ROT, betay_2L1.V_ROT, dispx_2L1.V_ROT, dispy_2L1.V_ROT, betax_2L1.H_ROT, betay_2L1.H_ROT, dispx2L1.H_ROT, dispy2L1.H_ROT;

name(q1,q2):macro={
twiss, sequence=psb3, file= twiss_q1_q2;
};

qy=4.01;
qx=4.01;

! Loop over Qy
while (qy <= 4.99){

while (qx <= 4.99){

! Match tunes
MATCH,sequence=psb3;
 vary, NAME=kKD, step = 0.0001;
 vary, NAME=kKF, step = 0.0001;
 global, sequence=psb3, Q1=qx, Q2=qy;
 lmdif, calls = 10000, tolerance = 1.0E-15;
ENDMATCH;

/****
a=100*qx;
b=100*qy;

if (tar<1e-10);{
select, flag=twiss, clear;
select, flag=twiss, column= name, s, betx, bety, dx, dy, mux, muy, l;
exec name($a,$b);
};
****/

! write to table
if (tar<1e-10);{
call, file='model.madx';
fill, table=model;
};

qx=qx+0.01;
tar=1;
};

qx = 4.1;
qy=qy+0.01;
tar=1;
};

! write file
write, table=model, file=model;

!select, flag=twiss, clear;
!select, flag=twiss, column= name, s, betx, bety, dx;
!twiss, sequence=psb3, file= twiss;

stop;
